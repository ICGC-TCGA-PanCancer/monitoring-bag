---
- hosts: all 
  sudo: True
  tasks:
  # ensure a hostname is set for the sensu-server
  #- name: Set hostname
  #  hostname: name={{ansible_hostname}}
  # This allows clients to refer to the sensu-server by name
  # Idempotent way to build a /etc/hosts file with Ansible using your Ansible hosts inventory for a source.
  # Will include all hosts the playbook is run on.
  # Inspired from http://xmeblog.blogspot.com/2013/06/ansible-dynamicaly-update-etchosts.html
  - name: Build hosts file for all hosts
    sudo: True
    lineinfile: dest=/etc/hosts line="{{ lookup('env','PUBLIC_IP_ADDRESS')  }} {{item}}" state=present
    when: hostvars[item].ansible_default_ipv4.address is defined and hostvars[item].ansible_connection != 'local'
    with_items: groups['master']

- hosts: master
  sudo: True
  tasks:
  - name: Disable ephemeral mount at /mnt for amazon AWS
    shell: umount /mnt
    register: umount_output
    ignore_errors: yes
    
# setup sensu-server
- hosts: sensu-server 
  sudo: True
  roles: 
    - { role: server-dependencies }
    - { role: base }
    - { role: server }
    - { role: sensu-cli }
    - { role: uchiwa }
    - { role: client, subscriptions: "\"common\"" }

- hosts: worker 
  sudo: True
  roles: 
    - { role: base }
    - { role: client, subscriptions: "\"common\",\"compute\"" }

- hosts: multi-node-master 
  sudo: True
  roles: 
    - { role: base }
    - { role: client, subscriptions: "\"common\",\"multi-node-master\"" }

- hosts: master 
  sudo: True
  roles: 
    - { role: base }
    - { role: client, subscriptions: "\"common\",\"sanger\"" }

- hosts: master
  sudo: True
  tasks:
  # this seems like the wrong place for this, but not sure what the best place for it is if we cannot redistribute 
  # with the AMI
  - name: Copy over pem key for BWA
    copy: src=/home/ubuntu/.ssh/gnostest.pem dest=/home/ubuntu/.gnos/
